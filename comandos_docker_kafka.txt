cd C:\Users\Javier\Documents\DESARROLLO\kafka\kafka-stack-docker-compose

docker-compose -f ./zk-single-kafka-single.yml up
docker-compose -f ./zk-single-kafka-single-jqr.yml up


docker-compose -f ./docker-componse-bybard-multiplek-singlez.yml up -d

docker exec -it 3540a84c6a99   /bin/bash


telnet localhost 2181


docker run -p 8080:8080 -name 


docker-compose -f ./docker-componse-bybard.yml up -d


docker run -p 8080:8080 --name kafka_client_redpanda -e KAFKA_BROKERS=kafka1:9092,kafk<a2:9093,kafka3:9094 -e docker.redpanda.com/vectorized/console:master-0a8fce8

docker run -p 8080:8080 --name kafka_client_redpanda -e KAFKA_BROKERS=kafka1:9092,kafka2:9093,kafka3:9094 -e docker.redpanda.com/vectorized/console:master-0a8fce8

docker run -it --rm -p 8080:8080 --name kafka_client_redpanda -e KAFKA_BROKERS=kafka1:9092,kafka2:9092,kafka3:9092 redpandadata/redpanda

docker run -it -d -p 8080:8080 --name kafka_client_redpanda redpandadata/redpanda


docker run -d -p 9003:9003 --network kafka-stack-docker-compose_default --name=kafka-manager-hle-stable -e ZK_HOSTS="zookeeper:2181" hlebalbau/kafka-manager:stable



docker run -it -d -p 9001:9001 --name=kafka-manager-hle hlebalbau/kafka-manager




docker run -it -d -p 9000:9000 --network kafka-stack-docker-compose_default --name=kafka-manager -e ZK_HOST="zookeeper:2181" kafkamanager/kafka-manager:latest





docker exec -it kafka1 /bin/bash


Listar topics creados
kafka-topics.sh --bootstrap-server localhost:9092 --list
kafka-topics.sh --list --zookeeper localhost:2181



**Escribir en topic
kafka-console-producer.sh --broker-list localhost:9092 --topic test4-topic

**Leer desde un topic
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test4-topic --group grupo1 --from-beginning
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test4-topic --group grupo2 --from-beginning
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test4-topic --from-beginning


**Crear topic
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic test4-topic --partitions 2 --replication-factor 3
**Consultar topic
kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic test4-topic
kafka-configs.sh 


kafka-consumer-groups.sh


ver red de contenedor kafka1
docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" kafka1



mvn clean package


docker build -t test:1.0 .


docker network
kafka-stack-docker-compose_default


docker run -p 8282:8282 --network kafka-stack-docker-compose_default --name test-kafka-client test:1.0



